{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/painel/frases-mock.ts","webpack:///src/app/painel/painel.component.ts","webpack:///src/app/painel/painel.component.html","webpack:///src/app/progresso/progresso.component.ts","webpack:///src/app/progresso/progresso.component.html","webpack:///src/app/shared/coracao.model.ts","webpack:///src/app/tentativas/tentativas.component.ts","webpack:///src/app/tentativas/tentativas.component.html","webpack:///src/app/topo/topo.component.ts","webpack:///src/app/topo/topo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","tipo","console","log","encerrarJogo","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FRASES","fraseEng","frasePt","PainelComponent","frases","texto","resposta","rodada","progresso","tentativas","coracaoCheio","coracaoVazio","rodadaFrase","target","value","trim","element","alert","emit","atualizaResposta","verificarResposta","ProgressoComponent","Coracao","cheio","urlCoracaoCheio","urlCoracaoVazio","TentativasComponent","coracoes","TopoComponent","titulo","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App1';\n\n  public encerrarJogo(tipo: string): void {\n    console.log(tipo)\n  }\n}\n","<!-- ESTE É O COMPONENTE PRINCIPAL, NELES COLOCAMOS OS \nSELETORES COMO <app-topo>, <app-rodape>-->\n\n\n\n\n<app-topo></app-topo>\n\n<app-painel (encerrrarJogo)=\"encerrarJogo($event)\"></app-painel>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//DEVEMOS DECLARAR AQUI OS COMPONENTES FEITOS\nimport {TopoComponent} from './topo/topo.component';\nimport { PainelComponent } from './painel/painel.component';\nimport { TentativasComponent } from './tentativas/tentativas.component';\nimport { ProgressoComponent } from './progresso/progresso.component';\n\n// NAS DECLARAÇÕES TBM;\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopoComponent,\n    PainelComponent,\n    TentativasComponent,\n    ProgressoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * MOCK ==> é um cara capaz de simular o comportamento de \n * um componente, tornando possível você testar um outro\n * componente isoladamente.\n * \n * COMO NÃO TEMOS UM DB, USAMOS O MOCK PARA ARMAZENAR NOSSOS\n * DADOS E RECUPERALOS NO TEMPLATE;\n */\n\n\nimport { Frase } from \"../shared/frase.model\";\n\nexport const FRASES: Frase[] = [\n  { fraseEng: 'I am hungry' , frasePt:'Estou com fome'},\n  { fraseEng: 'How are you?' , frasePt:'Como vai voce?'},\n  { fraseEng: 'Help me' , frasePt:'Ajude me'},\n  { fraseEng: 'Son of a bitch' , frasePt:'Filho da puta'}\n];\n\n","\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n/**IMPORTADOS MANUALEMNTE. */\nimport { Frase } from \"../shared/frase.model\";\nimport { FRASES } from \"./frases-mock\";\n\n\n@Component({\n\tselector: 'app-painel',\n\ttemplateUrl: './painel.component.html',\n\tstyleUrls: ['./painel.component.css']\n})\n\n/*OnInit => vibiabiliza a inclusao de \num metodo do cilco de vida do componente*/\n\nexport class PainelComponent implements OnInit {\n\n    public frases: Frase[] = FRASES /**FRASES PEGAS DO MOCK */\n    public texto: string = \"Traduza a frase:\"\n    public resposta: string = \"\"\n    public rodada: number = 0\n    public rodadaFrase: Frase\n\n    public progresso: number = 0\n\n    public tentativas: number = 3\n\n    @Output() public encerrarJogo: EventEmitter<string> = new EventEmitter()\n\n    public coracaoCheio: string = '/assets/coracao_cheio.png'\n    public coracaoVazio: string = '/assets/coracao_vazio.png'\n\n    constructor() {\n        this.rodadaFrase = this.frases[this.rodada] // Pega FRASE[0], FRASE[1], FRASE[2] ...\n        //console.log(this.rodadaFrase)\n        //console.log(this.rodadaFrase.frasePt)\n    }\n\n\tngOnInit(): void {\n\n\t}\n\n  // FUNÇÃO DE ATUALIZAR RESPOSTA NO TEXT-AREA:\n\n    public atualizaResposta(resposta: Event): void {\n\t\t/**\n       * AO TENTAR DAR CONSOLE : console.log(resposta.target.value)\n       * TEMOS A MSG QUE \"Property VALUE not exist in EventTarget \n       * (que buscamos no console do chrome)\n       * \n       * PARA RESOLVER O PROBLEMA PRECISAMOS USAR O:\n       * (<HTMLInputElement>resposta.target) como abaixo:\n       * OBS: trim() PARA IGNORAR ESPAÇOS ANTES E DPOIS DO TEXTO;\n       */\n\t\t  this.resposta = ((<HTMLInputElement>resposta.target).value.trim())\n    }\n\n  public clearContents(element):void{\n    element.value=\"\"\n  }\n\n\n\tverificarResposta(): void {\n  \n    // VERIFICAR SE A FRASE DIGITADA É CORRETA:\n\t\tif (this.rodadaFrase.frasePt == this.resposta) {\n      alert(\"Tradução correta\")\n      \n\n      if(this.rodada === 4) {\n        this.encerrarJogo.emit('Vitória')\n      }\n      // TROCAR PERGUNTA DA RODADA\n      this.rodada++\n      \n      //Atualiza Progresso\n      this.progresso = this.progresso + 25 //(100/(this.frases.length))\n      console.log(this.progresso)\n\n      /* CADA FRASE SE RELACIONA COM AS RODADAS ==> 0,1,2,3... \n\t\t\t *  POR ISSO USAMOS O this.rodada */\n\n      //ATUALIZA OBJETO RODADAFRASE\n\t\t\tthis.rodadaFrase = this.frases[this.rodada]\n      if(this.progresso == 100) {\n        alert(\"parabens, voce ganhou\")\n        this.resposta = ''\n        this.progresso = 0\n      }\n      //Limpar o campo de resposta\n      this.resposta = ''\n\n\t\t} else {\n      if(this.tentativas > 0) {\n        alert(\"Tradução errada, tente novamente\")\n      \n      \n        //this.coracaoCheio = this.coracaoVazio\n        //DECREMENTAR A VARIAVEL TENTATIVA\n        this.tentativas--\n      \n      } else if(this.tentativas == 0){\n        this.encerrarJogo.emit('derrota')\n      }\n    }\n    console.log(this.tentativas)\n  }\n  \n  \n}  \n","<div class=\"container\">\n\t<div class=\"jumbotron mt-5 py-4\">\n\t\t<div class=\"row\">\n\t\t\t<!-- DIVIDIR EM 2 COL COM 6 DE GRID CADA -->\n\t\t\t<div class=\"col-sm-6\">\n\t\t\t<!-- COMPONENTE PROGRESSO -->\n\t\t\t\t<app-progresso [progresso]=\"progresso\"></app-progresso>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 d-flex justify-content-end\">\n\t\t\t\t<!-- Class tentativas -->\n\t\t\t\t<app-tentativas ></app-tentativas>\n\t\t\t</div>\n\t\t\t<div class=\"row px-3\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<h5>{{texto}}</h5>\n\t\t\t\t\t<p> {{frases[rodada].fraseEng}}</p>\n\t\t\t\t\t<!-- <p>{{resposta}}</p>  ==> two-way data-binding -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\n\n\t\t<!--FORMULÁRIO -->\n\n\t\t<div class=\"form-group\">\n\t\t\t<!-- EVENTO (input)=\"atualizaResposta()\" ==> para fazer o EVENT BINDING COM \n            A FUNÇÃO DO PAINEL.COMPONENT.TS-->\n\t\t\t<textarea \n\t\t\tclass=\"form-control\" \n\t\t\trows=\"3\" \n\t\t\t(input)=\"atualizaResposta($event)\"\n\t\t\t[value]=\"resposta\"  \n\t\t\t>  <!--Property Bind  no [value] = \"resposta\"-->\n\t\t\t</textarea>\n\t\t</div>\n\n\n\n\t\t<!-- Sempre colocar class=row e class=col, para usar FLEX-BOX-->\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col\">\n\t\t\t\t<div class=\"d-flex justify-content-end\">\n\t\t\t\t\t<button type=\"button\" class=\" btn btn-primary\" (click)=\"verificarResposta()\">Verificar</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-progresso',\n\ttemplateUrl: './progresso.component.html',\n\tstyleUrls: ['./progresso.component.css']\n})\nexport class ProgressoComponent implements OnInit {\n\n\t//@Input() DECORADOR => COMP PROGRESSO ACEITA PARÂMETROS EXTERNOS;\n\t@Input() public progresso: number = 0\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t}\n\n}\n","<div class=\"progress bg-white \">\n    <div class=\"progress-bar w-{{progresso}}\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n\n\n    </div>\n</div>\n","export class Coracao \n{\n  \n  constructor( public cheio: boolean,\n    public urlCoracaoCheio: string = '/assets/coracao_cheio.png',\n    public urlCoracaoVazio: string = '/assets/coracao_vazioo.png'\n  ) {}\n\n  public exibeCoracao(): string {\n    if(this.cheio){\n      return this.urlCoracaoCheio\n    \n    }else {\n      return this.urlCoracaoVazio\n    } \n  }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Coracao } from '../shared/coracao.model';\n\n\n@Component({\n  selector: 'app-tentativas',\n  templateUrl: './tentativas.component.html',\n  styleUrls: ['./tentativas.component.css']\n})\nexport class TentativasComponent implements OnInit\n{\n  public coracaoCheio: string = '/assets/coracao_cheio.png'\n  public coracaoVazio: string = '/assets/coracao_vazio.png'\n  \n  @Input() public tentativas: number\n  public coracoes: Coracao[] = [    \n    new Coracao(true), //INSTANCIANDO COMO TRUE ==> RETORNARÁ CORAÇAO CHEIO\n    new Coracao(true),\n    new Coracao(true)\n  ]\n\n  constructor() \n  {\n    console.log(this.coracoes)\n  }\n/*\n  ngOnChanges(){\n    //console.log('tentativas recebidas no painel: ', this.tentativas)\n    console.log(this.coracoes)\n    console.log('ngOnChanges')\n    \n    //(this.tentativas != this.coracoes.length){\n     // let indice = this.coracoes.length - this.tentativas\n\n      // 3 - 2 = 1\n\n      this.coracoes[indice - 1].cheio = false\n    }\n  }\n*/\n  ngOnInit(): void {\n  //  console.log('tentativas recebidas no painel: ', this.tentativas)\n  }\n\n}\n","\n<!-- Property Bind ==> usa colchetes [ src]\ncom ele controlamos o elemento no TS -->\n\n<img [src]=\"coracaoCheio\" >\n<img [src]= \"coracaoCheio\">\n<img [src]= \"coracaoCheio\">\n\n<!--  \n<img *ngFor=\"let coracao of coracoes\" [src]=\"coracao.exibeCoracao()\"  />\n-->","\n//Importação do modulo, pego no node_modules @angular;\nimport {Component} from '@angular/core'\n\n\n//Decorator para a classe, para dizer pro angular que é um componente\n@Component({\n  selector: 'app-topo', // Rótulo ==> instancia no template \n  templateUrl: './topo.component.html',\n  styleUrls: ['./topo.component.css']\n})\n\nexport class TopoComponent \n{\n  public titulo: string ='Aprendendo inglês'\n} ","<nav class=\"navbar navbar-layer bg-layer\">\n    <span class=\"navbar-brand mb-0 h1\">{{titulo}}</span>\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}